# Use "python language" so that the C compiler can be chosen in env
language: python
python:
  - "3.6"

# Use Ubuntu 18.04 bionic with container infrastructure
dist: bionic
sudo: false

matrix:
  include:
    # gcc without MinGW
    - env: CC=gcc WINCC=false WITH_KERN=true
    - env: CC="gcc -m32" WINCC=false
    # clang without MinGW
    - env: CC=clang WINCC=false
    - env: CC="clang -m32" WINCC=false
    # MinGW compilation
    # In a container, wine fails to load with the following error:
    # /usr/bin/wine: error while loading shared libraries: libwine.so.1: cannot create shared object descriptor: Operation not permitted
    # Because of this, use "sudo: true" for Wine-based builds.
    - env: OS=Windows_NT WINCC=x86_64-w64-mingw32-gcc CC=$WINCC
      sudo: true
    - env: OS=Windows_NT WINCC=i686-w64-mingw32-gcc CC=$WINCC
      sudo: true
    # MinGW compilation with ANSI function instead of the wide-character ones
    - env: OS=Windows_NT WINCC=x86_64-w64-mingw32-gcc CC=$WINCC HAVE_UNICODE=n
      sudo: true
    - env: OS=Windows_NT WINCC=i686-w64-mingw32-gcc CC=$WINCC HAVE_UNICODE=n
      sudo: true

addons:
  apt:
    packages:
    - gcc-multilib
    - gdb
    - libc6-dev-i386
    - libgmp-dev
    - libgtk-3-dev
    - libmnl-dev
    - linux-headers-generic
    - libpulse-dev
    - libsdl2-dev
    - pkgconf
    - binutils-mingw-w64
    - gcc-mingw-w64
    - wine-stable
    - wine32
    - wine64

install:
  # pip does not behave properly when CC is somewhat weird
  - if [ "$CC" = "gcc" ] ; then pip install cffi numpy pycrypto z3-solver ; fi

before_script:
# Find the version of the installed kernel headers from linux-headers-generic package
# Note: Travis-ci does not like having a colon after "Depends" in the regex :(
  - if "${WITH_KERN:-false}" ; then
    export KERNELVER="$(LANG=C dpkg --status linux-headers-generic |
        sed -n 's/^Depends. linux-headers-\(.*\)/\1/p')" ;
    fi

script:
  - make test
  - make list-nobuild

# Do not spam by email so long as the build succeeds
notifications:
  email:
    on_success: never
